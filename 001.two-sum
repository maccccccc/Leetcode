Question:
给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。

你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。

示例:

给定 nums = [2, 7, 11, 15], target = 9

因为 nums[0] + nums[1] = 2 + 7 = 9
所以返回 [0, 1]

Solution:
使用HashMap来建立数字和其坐标位置之间的映射，在遍历数组的时候，用target减去遍历到的数字，就是另一个需要的数字了，
 直接在HashMap中查找其是否存在即可，注意要判断查找到的数字不是第一个数字，
 比如target是4，遍历到了一个2，那么另外一个2不能是之前那个2，
 整个实现步骤为：先遍历一遍数组，建立HashMap映射，然后再遍历一遍，开始查找，找到则记录index。
 时间复杂度为O(n)
 
Python Code:
class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        dict = {}
        for i in range(len(nums)):
            x = nums[i]
            if target-x in dict:
                return (dict[target-x], i)
            dict[x] = i
